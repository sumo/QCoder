package avformat;
import com.ochafik.lang.jnaerator.runtime.Structure;
/**
 * <i>native declaration : src/main/headers/libavformat/metadata.h:32</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVMetadata extends Structure<AVMetadata, AVMetadata.ByValue, AVMetadata.ByReference > {
	public int count;
	/// C type : AVMetadataTag*
	public avformat.AVMetadataTag.ByReference elems;
	public AVMetadata() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"count", "elems"});
	}
	/// @param elems C type : AVMetadataTag*
	public AVMetadata(int count, avformat.AVMetadataTag.ByReference elems) {
		super();
		this.count = count;
		this.elems = elems;
		initFieldOrder();
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected AVMetadata newInstance() { return new AVMetadata(); }
	public static AVMetadata[] newArray(int arrayLength) {
		return Structure.newArray(AVMetadata.class, arrayLength);
	}
	public static class ByReference extends AVMetadata implements Structure.ByReference {
		
	};
	public static class ByValue extends AVMetadata implements Structure.ByValue {
		
	};
}
