package avformat;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
/**
 * <i>native declaration : src/main/headers/libavformat/avio.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class URLProtocol extends Structure<URLProtocol, URLProtocol.ByValue, URLProtocol.ByReference > {
	/// C type : const char*
	public Pointer name;
	/// C type : url_open_callback
	public URLProtocol.url_open_callback url_open;
	/// C type : url_read_callback
	public URLProtocol.url_read_callback url_read;
	/// C type : url_write_callback
	public URLProtocol.url_write_callback url_write;
	/// C type : url_seek_callback
	public URLProtocol.url_seek_callback url_seek;
	/// C type : url_close_callback
	public URLProtocol.url_close_callback url_close;
	/// C type : URLProtocol*
	public URLProtocol.ByReference next;
	/// C type : url_read_pause_callback
	public URLProtocol.url_read_pause_callback url_read_pause;
	/// C type : url_read_seek_callback
	public URLProtocol.url_read_seek_callback url_read_seek;
	/// C type : url_get_file_handle_callback
	public URLProtocol.url_get_file_handle_callback url_get_file_handle;
	/// <i>native declaration : src/main/headers/libavformat/avio.h</i>
	public interface url_open_callback extends Callback {
		int apply(URLContext h, Pointer url, int flags);
	};
	/// <i>native declaration : src/main/headers/libavformat/avio.h</i>
	public interface url_read_callback extends Callback {
		int apply(URLContext h, Pointer buf, int size);
	};
	/// <i>native declaration : src/main/headers/libavformat/avio.h</i>
	public interface url_write_callback extends Callback {
		int apply(URLContext h, Pointer buf, int size);
	};
	/// <i>native declaration : src/main/headers/libavformat/avio.h</i>
	public interface url_seek_callback extends Callback {
		long apply(URLContext h, long pos, int whence);
	};
	/// <i>native declaration : src/main/headers/libavformat/avio.h</i>
	public interface url_close_callback extends Callback {
		int apply(URLContext h);
	};
	/// <i>native declaration : src/main/headers/libavformat/avio.h</i>
	public interface url_read_pause_callback extends Callback {
		int apply(URLContext h, int pause);
	};
	/// <i>native declaration : src/main/headers/libavformat/avio.h</i>
	public interface url_read_seek_callback extends Callback {
		long apply(URLContext h, int stream_index, long timestamp, int flags);
	};
	/// <i>native declaration : src/main/headers/libavformat/avio.h</i>
	public interface url_get_file_handle_callback extends Callback {
		int apply(URLContext h);
	};
	public URLProtocol() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"name", "url_open", "url_read", "url_write", "url_seek", "url_close", "next", "url_read_pause", "url_read_seek", "url_get_file_handle"});
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected URLProtocol newInstance() { return new URLProtocol(); }
	public static URLProtocol[] newArray(int arrayLength) {
		return Structure.newArray(URLProtocol.class, arrayLength);
	}
	public static class ByReference extends URLProtocol implements Structure.ByReference {
		
	};
	public static class ByValue extends URLProtocol implements Structure.ByValue {
		
	};
}
