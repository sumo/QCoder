package avformat;
import avutil.AVRational;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Pointer;
/**
 * <i>native declaration : src/main/headers/libavformat/avformat.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVChapter extends Structure<AVChapter, AVChapter.ByValue, AVChapter.ByReference > {
	/// < unique ID to identify the chapter
	public int id;
	/**
	 * < time base in which the start/end timestamps are specified<br>
	 * C type : AVRational
	 */
	public AVRational time_base;
	/// < chapter start/end time in time_base units
	public long start;
	/// < chapter start/end time in time_base units
	public long end;
	/**
	 * < chapter title<br>
	 * C type : char*
	 */
	public Pointer title;
	/// C type : AVMetadata*
	public avformat.AVMetadata.ByReference metadata;
	public AVChapter() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"id", "time_base", "start", "end", "title", "metadata"});
	}
	/**
	 * @param id < unique ID to identify the chapter<br>
	 * @param time_base < time base in which the start/end timestamps are specified<br>
	 * C type : AVRational<br>
	 * @param start < chapter start/end time in time_base units<br>
	 * @param end < chapter start/end time in time_base units<br>
	 * @param title < chapter title<br>
	 * C type : char*<br>
	 * @param metadata C type : AVMetadata*
	 */
	public AVChapter(int id, AVRational time_base, long start, long end, Pointer title, avformat.AVMetadata.ByReference metadata) {
		super();
		this.id = id;
		this.time_base = time_base;
		this.start = start;
		this.end = end;
		this.title = title;
		this.metadata = metadata;
		initFieldOrder();
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected AVChapter newInstance() { return new AVChapter(); }
	public static AVChapter[] newArray(int arrayLength) {
		return Structure.newArray(AVChapter.class, arrayLength);
	}
	public static class ByReference extends AVChapter implements Structure.ByReference {
		
	};
	public static class ByValue extends AVChapter implements Structure.ByValue {
		
	};
}
