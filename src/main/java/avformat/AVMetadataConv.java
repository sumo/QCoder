package avformat;
import com.ochafik.lang.jnaerator.runtime.Structure;
/**
 * <i>native declaration : src/main/headers/libavformat/metadata.h:37</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVMetadataConv extends Structure<AVMetadataConv, AVMetadataConv.ByValue, AVMetadataConv.ByReference > {
	/// C type : const char*
	public String native$;
	/// C type : const char*
	public String generic;
	public AVMetadataConv() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"native$", "generic"});
	}
	/**
	 * @param native$ C type : const char*<br>
	 * @param generic C type : const char*
	 */
	public AVMetadataConv(String native$, String generic) {
		super();
		this.native$ = native$;
		this.generic = generic;
		initFieldOrder();
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected AVMetadataConv newInstance() { return new AVMetadataConv(); }
	public static AVMetadataConv[] newArray(int arrayLength) {
		return Structure.newArray(AVMetadataConv.class, arrayLength);
	}
	public static class ByReference extends AVMetadataConv implements Structure.ByReference {
		
	};
	public static class ByValue extends AVMetadataConv implements Structure.ByValue {
		
	};
}
