package avformat;
import avcodec.AVPacket;
import com.ochafik.lang.jnaerator.runtime.Structure;
/**
 * <i>native declaration : src/main/headers/libavformat/avformat.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVPacketList extends Structure<AVPacketList, AVPacketList.ByValue, AVPacketList.ByReference > {
	/// C type : AVPacket
	public AVPacket pkt;
	/// C type : AVPacketList*
	public AVPacketList.ByReference next;
	public AVPacketList() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"pkt", "next"});
	}
	/**
	 * @param pkt C type : AVPacket<br>
	 * @param next C type : AVPacketList*
	 */
	public AVPacketList(AVPacket pkt, AVPacketList.ByReference next) {
		super();
		this.pkt = pkt;
		this.next = next;
		initFieldOrder();
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected AVPacketList newInstance() { return new AVPacketList(); }
	public static AVPacketList[] newArray(int arrayLength) {
		return Structure.newArray(AVPacketList.class, arrayLength);
	}
	public static class ByReference extends AVPacketList implements Structure.ByReference {
		
	};
	public static class ByValue extends AVPacketList implements Structure.ByValue {
		
	};
}
