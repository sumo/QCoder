package avcodec;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.ShortByReference;
/**
 * <i>native declaration : src/main/headers/libavcodec/avcodec.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVFrame extends Structure<AVFrame, AVFrame.ByValue, AVFrame.ByReference > {
	/// C type : uint8_t*[4]
	public Pointer[] data = new Pointer[(4)];
	/// C type : int[4]
	public int[] linesize = new int[(4)];
	/// C type : uint8_t*[4]
	public Pointer[] base = new Pointer[(4)];
	public int key_frame;
	public int pict_type;
	public long pts;
	public int coded_picture_number;
	public int display_picture_number;
	public int quality;
	public int age;
	public int reference;
	/// C type : int8_t*
	public Pointer qscale_table;
	public int qstride;
	/// C type : uint8_t*
	public Pointer mbskip_table;
	/// C type : int16_t[2]*[2]
	public Pointer[] motion_val = new Pointer[(2)];
	/// C type : uint32_t*
	public IntByReference mb_type;
	public byte motion_subsample_log2;
	/// C type : void*
	public Pointer opaque;
	/// C type : uint64_t[4]
	public long[] error = new long[(4)];
	public int type;
	public int repeat_pict;
	public int qscale_type;
	public int interlaced_frame;
	public int top_field_first;
	/// C type : AVPanScan*
	public avcodec.AVPanScan.ByReference pan_scan;
	public int palette_has_changed;
	public int buffer_hints;
	/// C type : short*
	public ShortByReference dct_coeff;
	/// C type : int8_t*[2]
	public Pointer[] ref_index = new Pointer[(2)];
	public long reordered_opaque;
	/// C type : void*
	public Pointer hwaccel_picture_private;
	public AVFrame() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"data", "linesize", "base", "key_frame", "pict_type", "pts", "coded_picture_number", "display_picture_number", "quality", "age", "reference", "qscale_table", "qstride", "mbskip_table", "motion_val", "mb_type", "motion_subsample_log2", "opaque", "error", "type", "repeat_pict", "qscale_type", "interlaced_frame", "top_field_first", "pan_scan", "palette_has_changed", "buffer_hints", "dct_coeff", "ref_index", "reordered_opaque", "hwaccel_picture_private"});
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected AVFrame newInstance() { return new AVFrame(); }
	public static AVFrame[] newArray(int arrayLength) {
		return Structure.newArray(AVFrame.class, arrayLength);
	}
	public static class ByReference extends AVFrame implements Structure.ByReference {
		
	};
	public static class ByValue extends AVFrame implements Structure.ByValue {
		
	};
}
