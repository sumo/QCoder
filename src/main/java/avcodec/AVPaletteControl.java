package avcodec;
import com.ochafik.lang.jnaerator.runtime.Structure;
/**
 * <i>native declaration : src/main/headers/libavcodec/avcodec.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVPaletteControl extends Structure<AVPaletteControl, AVPaletteControl.ByValue, AVPaletteControl.ByReference > {
	/**
	 * Demuxer sets this to 1 to indicate the palette has changed;<br>
	 * decoder resets to 0.
	 */
	public int palette_changed;
	/**
	 * 4-byte ARGB palette entries, stored in native byte order; note that<br>
	 * the individual palette components should be on a 8-bit scale; if<br>
	 * the palette data comes from an IBM VGA native format, the component<br>
	 * data is probably 6 bits in size and needs to be scaled.<br>
	 * C type : unsigned int[256]
	 */
	public int[] palette = new int[(256)];
	public AVPaletteControl() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"palette_changed", "palette"});
	}
	/**
	 * @param palette_changed Demuxer sets this to 1 to indicate the palette has changed;<br>
	 * decoder resets to 0.<br>
	 * @param palette 4-byte ARGB palette entries, stored in native byte order; note that<br>
	 * the individual palette components should be on a 8-bit scale; if<br>
	 * the palette data comes from an IBM VGA native format, the component<br>
	 * data is probably 6 bits in size and needs to be scaled.<br>
	 * C type : unsigned int[256]
	 */
	public AVPaletteControl(int palette_changed, int palette[]) {
		super();
		this.palette_changed = palette_changed;
		if (palette.length != this.palette.length) 
			throw new IllegalArgumentException("Wrong array size !");
		this.palette = palette;
		initFieldOrder();
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected AVPaletteControl newInstance() { return new AVPaletteControl(); }
	public static AVPaletteControl[] newArray(int arrayLength) {
		return Structure.newArray(AVPaletteControl.class, arrayLength);
	}
	public static class ByReference extends AVPaletteControl implements Structure.ByReference {
		
	};
	public static class ByValue extends AVPaletteControl implements Structure.ByValue {
		
	};
}
