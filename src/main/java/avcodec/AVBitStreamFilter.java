package avcodec;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.PointerByReference;
/**
 * <i>native declaration : src/main/headers/libavcodec/avcodec.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVBitStreamFilter extends Structure<AVBitStreamFilter, AVBitStreamFilter.ByValue, AVBitStreamFilter.ByReference > {
	/// C type : const char*
	public Pointer name;
	public int priv_data_size;
	/// C type : filter_callback
	public AVBitStreamFilter.filter_callback filter;
	/// C type : close_callback
	public AVBitStreamFilter.close_callback close;
	/// C type : AVBitStreamFilter*
	public AVBitStreamFilter.ByReference next;
	/// <i>native declaration : src/main/headers/libavcodec/avcodec.h</i>
	public interface filter_callback extends Callback {
		int apply(AVBitStreamFilterContext bsfc, AVCodecContext avctx, Pointer args, PointerByReference poutbuf, IntByReference poutbuf_size, Pointer buf, int buf_size, int keyframe);
	};
	/// <i>native declaration : src/main/headers/libavcodec/avcodec.h</i>
	public interface close_callback extends Callback {
		void apply(AVBitStreamFilterContext bsfc);
	};
	public AVBitStreamFilter() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"name", "priv_data_size", "filter", "close", "next"});
	}
	/**
	 * @param name C type : const char*<br>
	 * @param filter C type : filter_callback<br>
	 * @param close C type : close_callback<br>
	 * @param next C type : AVBitStreamFilter*
	 */
	public AVBitStreamFilter(Pointer name, int priv_data_size, AVBitStreamFilter.filter_callback filter, AVBitStreamFilter.close_callback close, AVBitStreamFilter.ByReference next) {
		super();
		this.name = name;
		this.priv_data_size = priv_data_size;
		this.filter = filter;
		this.close = close;
		this.next = next;
		initFieldOrder();
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected AVBitStreamFilter newInstance() { return new AVBitStreamFilter(); }
	public static AVBitStreamFilter[] newArray(int arrayLength) {
		return Structure.newArray(AVBitStreamFilter.class, arrayLength);
	}
	public static class ByReference extends AVBitStreamFilter implements Structure.ByReference {
		
	};
	public static class ByValue extends AVBitStreamFilter implements Structure.ByValue {
		
	};
}
