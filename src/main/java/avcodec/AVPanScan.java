package avcodec;
import com.ochafik.lang.jnaerator.runtime.Structure;
/**
 * <i>native declaration : src/main/headers/libavcodec/avcodec.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVPanScan extends Structure<AVPanScan, AVPanScan.ByValue, AVPanScan.ByReference > {
	/**
	 * id<br>
	 * - encoding: Set by user.<br>
	 * - decoding: Set by libavcodec.
	 */
	public int id;
	/**
	 * width and height in 1/16 pel<br>
	 * - encoding: Set by user.<br>
	 * - decoding: Set by libavcodec.
	 */
	public int width;
	public int height;
	/**
	 * position of the top left corner in 1/16 pel for up to 3 fields/frames<br>
	 * - encoding: Set by user.<br>
	 * - decoding: Set by libavcodec.<br>
	 * C type : int16_t[3][2]
	 */
	public short[] position = new short[3 * 2];
	public AVPanScan() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"id", "width", "height", "position"});
	}
	/**
	 * @param id id<br>
	 * - encoding: Set by user.<br>
	 * - decoding: Set by libavcodec.<br>
	 * @param width width and height in 1/16 pel<br>
	 * - encoding: Set by user.<br>
	 * - decoding: Set by libavcodec.<br>
	 * @param position position of the top left corner in 1/16 pel for up to 3 fields/frames<br>
	 * - encoding: Set by user.<br>
	 * - decoding: Set by libavcodec.<br>
	 * C type : int16_t[3][2]
	 */
	public AVPanScan(int id, int width, int height, short position[]) {
		super();
		this.id = id;
		this.width = width;
		this.height = height;
		if (position.length != this.position.length) 
			throw new IllegalArgumentException("Wrong array size !");
		this.position = position;
		initFieldOrder();
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected AVPanScan newInstance() { return new AVPanScan(); }
	public static AVPanScan[] newArray(int arrayLength) {
		return Structure.newArray(AVPanScan.class, arrayLength);
	}
	public static class ByReference extends AVPanScan implements Structure.ByReference {
		
	};
	public static class ByValue extends AVPanScan implements Structure.ByValue {
		
	};
}
