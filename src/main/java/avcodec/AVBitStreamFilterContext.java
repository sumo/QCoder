package avcodec;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Pointer;
/**
 * <i>native declaration : src/main/headers/libavcodec/avcodec.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVBitStreamFilterContext extends Structure<AVBitStreamFilterContext, AVBitStreamFilterContext.ByValue, AVBitStreamFilterContext.ByReference > {
	/// C type : void*
	public Pointer priv_data;
	/// C type : AVBitStreamFilter*
	public avcodec.AVBitStreamFilter.ByReference filter;
	/// C type : AVCodecParserContext*
	public avcodec.AVCodecParserContext.ByReference parser;
	/// C type : AVBitStreamFilterContext*
	public AVBitStreamFilterContext.ByReference next;
	public AVBitStreamFilterContext() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"priv_data", "filter", "parser", "next"});
	}
	/**
	 * @param priv_data C type : void*<br>
	 * @param filter C type : AVBitStreamFilter*<br>
	 * @param parser C type : AVCodecParserContext*<br>
	 * @param next C type : AVBitStreamFilterContext*
	 */
	public AVBitStreamFilterContext(Pointer priv_data, avcodec.AVBitStreamFilter.ByReference filter, avcodec.AVCodecParserContext.ByReference parser, AVBitStreamFilterContext.ByReference next) {
		super();
		this.priv_data = priv_data;
		this.filter = filter;
		this.parser = parser;
		this.next = next;
		initFieldOrder();
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected AVBitStreamFilterContext newInstance() { return new AVBitStreamFilterContext(); }
	public static AVBitStreamFilterContext[] newArray(int arrayLength) {
		return Structure.newArray(AVBitStreamFilterContext.class, arrayLength);
	}
	public static class ByReference extends AVBitStreamFilterContext implements Structure.ByReference {
		
	};
	public static class ByValue extends AVBitStreamFilterContext implements Structure.ByValue {
		
	};
}
