package avcodec;
import com.ochafik.lang.jnaerator.runtime.Structure;
import com.sun.jna.Pointer;
/**
 * <i>native declaration : src/main/headers/libavcodec/avcodec.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVPicture extends Structure<AVPicture, AVPicture.ByValue, AVPicture.ByReference > {
	/// C type : uint8_t*[4]
	public Pointer[] data = new Pointer[(4)];
	/**
	 * < number of bytes per line<br>
	 * C type : int[4]
	 */
	public int[] linesize = new int[(4)];
	public AVPicture() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"data", "linesize"});
	}
	/**
	 * @param data C type : uint8_t*[4]<br>
	 * @param linesize < number of bytes per line<br>
	 * C type : int[4]
	 */
	public AVPicture(Pointer data[], int linesize[]) {
		super();
		if (data.length != this.data.length) 
			throw new IllegalArgumentException("Wrong array size !");
		this.data = data;
		if (linesize.length != this.linesize.length) 
			throw new IllegalArgumentException("Wrong array size !");
		this.linesize = linesize;
		initFieldOrder();
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected AVPicture newInstance() { return new AVPicture(); }
	public static AVPicture[] newArray(int arrayLength) {
		return Structure.newArray(AVPicture.class, arrayLength);
	}
	public static class ByReference extends AVPicture implements Structure.ByReference {
		
	};
	public static class ByValue extends AVPicture implements Structure.ByValue {
		
	};
}
