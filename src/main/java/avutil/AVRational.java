package avutil;
import com.ochafik.lang.jnaerator.runtime.Structure;
/**
 * <i>native declaration : src/main/headers/libavutil/rational.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVRational extends Structure<AVRational, AVRational.ByValue, AVRational.ByReference > {
	/// < numerator
	public int num;
	/// < denominator
	public int den;
	public AVRational() {
		super();
		initFieldOrder();
	}
	protected void initFieldOrder() {
		setFieldOrder(new java.lang.String[]{"num", "den"});
	}
	/**
	 * @param num < numerator<br>
	 * @param den < denominator
	 */
	public AVRational(int num, int den) {
		super();
		this.num = num;
		this.den = den;
		initFieldOrder();
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected AVRational newInstance() { return new AVRational(); }
	public static AVRational[] newArray(int arrayLength) {
		return Structure.newArray(AVRational.class, arrayLength);
	}
	public static class ByReference extends AVRational implements Structure.ByReference {
		
	};
	public static class ByValue extends AVRational implements Structure.ByValue {
		
	};
}
